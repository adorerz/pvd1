name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: adorers/pvd
  AWS_REGION: us-east-1
  CLUSTER_NAME: pvd-cluster

jobs:
  build:
    name: 🏗️ Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: 📦 Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: ✅ Run tests
        run: |
          source .venv/bin/activate
          pytest tests/

  security-scan:
    name: 🔍 Security Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v4

      - name: 🛡 SAST Code Security Scan (Semgrep)
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/default"

      - name: 🛡 Scan Dependencies (Snyk)
        uses: snyk/actions/python@master
        with:
          command: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    name: 🐳 Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🏗️ Build Docker Image
        run: docker build -t $IMAGE_NAME:${{ github.sha }} .

      - name: 🛡 Scan Docker Image (Trivy)
        run: |
          docker run --rm aquasec/trivy image --exit-code 1 --severity HIGH,CRITICAL $IMAGE_NAME:${{ github.sha }}

      - name: 📤 Push Docker Image
        run: |
          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest

  deploy:
    name: 🚀 Deploy to Kubernetes (EKS)
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: 🛎 Checkout k8s repo
        uses: actions/checkout@v4
        with:
          repository: adorerz/pvd-k8s
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region $AWS_REGION

      - name: ⚡ Update Kubernetes Manifests
        run: |
          sed -i "s|IMAGE_PLACEHOLDER|$IMAGE_NAME:${{ github.sha }}|" k8s/deployment.yml

      - name: 🚀 Deploy to EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
          kubectl apply -f k8s/

